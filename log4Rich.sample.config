#
# log4Rich Comprehensive Configuration File
#
# This configuration file combines all available settings for log4Rich with 
# educational content and production examples. It serves as both a complete
# reference and a template for your own log4Rich configuration.
#
# Copy this file to one of the search locations listed below and customize
# according to your needs.
#
# CONFIGURATION FILE SEARCH ORDER (highest to lowest precedence):
# 1. System Property: -Dlog4rich.config=/path/to/config
# 2. Classpath: log4Rich.config (root of classpath)
# 3. Current Directory: ./log4Rich.config
# 4. Parent Directory: ../log4Rich.config
# 5. Config Directories:
#    - ./config/log4Rich.config
#    - ./conf/log4Rich.config
#    - ../config/log4Rich.config
#    - ../conf/log4Rich.config
#
# To use this file:
# 1. Copy to log4Rich.config in your project root, or
# 2. Copy to config/log4Rich.config in your project, or
# 3. Specify with -Dlog4rich.config=/path/to/your/config
#

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Root logger level - controls default logging level for all loggers
# Values: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
# Default: INFO
log4rich.rootLevel=INFO

# Enable location information capture (class name, method name, line number)
# This impacts performance but provides detailed logging context
# Disable in production for better performance
# Default: true
log4rich.location.capture=true

# =============================================================================
# CONSOLE LOGGING CONFIGURATION
# =============================================================================

# Enable/disable console logging
# Default: true
log4rich.console.enabled=true

# Console output target (STDOUT or STDERR)
# Default: STDOUT
log4rich.console.target=STDOUT

# Console-specific log level (overrides root level for console only)
# If not specified, uses root level
log4rich.console.level=INFO

# Console message pattern
# Default: [%level] %date{yyyy-MM-dd HH:mm:ss} [%thread] %class.%method:%line - %message%n
log4rich.console.pattern=[%level] %date{yyyy-MM-dd HH:mm:ss} [%thread] %class.%method:%line - %message%n

# =============================================================================
# FILE LOGGING CONFIGURATION
# =============================================================================

# Enable/disable file logging
# Default: true
log4rich.file.enabled=true

# Log file path (relative or absolute)
# Default: logs/application.log
log4rich.file.path=logs/application.log

# File-specific log level (overrides root level for file only)
# If not specified, uses root level
log4rich.file.level=DEBUG

# File message pattern (more detailed than console)
# Default: [%level] %date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %class.%method:%line - %message%n
log4rich.file.pattern=[%level] %date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %class.%method:%line - %message%n

# File rolling configuration
# Maximum file size before rolling (supports K, M, G suffixes)
# Default: 10M
log4rich.file.maxSize=10M

# Number of backup files to keep
# Default: 10
log4rich.file.maxBackups=10

# Date pattern for backup file naming
# Default: yyyy-MM-dd-HH-mm-ss
log4rich.file.datePattern=yyyy-MM-dd-HH-mm-ss

# File I/O settings
# File encoding
# Default: UTF-8
log4rich.file.encoding=UTF-8

# Buffer size in bytes for file writing
# Default: 8192
log4rich.file.bufferSize=8192

# Flush immediately after each write (true for safety, false for performance)
# Default: true
log4rich.file.immediateFlush=true

# =============================================================================
# COMPRESSION CONFIGURATION
# =============================================================================

# Enable compression of rolled log files
# Default: true
log4rich.file.compress=true

# Compression program (gzip, bzip2, xz, zip, 7z, or custom program)
# Default: gzip
log4rich.file.compress.program=gzip

# Additional compression arguments
# Default: (empty)
log4rich.file.compress.args=

# Examples for different compression programs:
# For gzip with fast compression:
#log4rich.file.compress.program=gzip
#log4rich.file.compress.args=-1

# For gzip with maximum compression:
#log4rich.file.compress.program=gzip
#log4rich.file.compress.args=-9

# For bzip2 with maximum compression:
#log4rich.file.compress.program=bzip2
#log4rich.file.compress.args=-9

# For xz with balanced compression:
#log4rich.file.compress.program=xz
#log4rich.file.compress.args=-6

# For parallel gzip (pigz) with 4 threads:
#log4rich.file.compress.program=pigz
#log4rich.file.compress.args=-p 4

# ASYNCHRONOUS COMPRESSION (NEW IN v1.1.0)
# Enable async compression for non-blocking log rotation (recommended)
# Default: true
log4rich.file.compress.async=true

# Async compression queue size - maximum files queued for compression
# Default: 100
log4rich.file.compress.async.queueSize=100

# Number of background compression threads
# Default: 2
log4rich.file.compress.async.threads=2

# Compression timeout in milliseconds
# Default: 30000
log4rich.file.compress.async.timeout=30000

# ADAPTIVE COMPRESSION MANAGEMENT
# When log rotation outpaces compression, the system will:
# 1. Detect queue overflow condition
# 2. Temporarily block to prevent memory exhaustion
# 3. Automatically DOUBLE the file size limit
# 4. Log the change in CAPITAL LETTERS in the log file
# This prevents system instability during high-volume logging

# =============================================================================
# PERFORMANCE CONFIGURATION (NEW IN v1.1.0)
# =============================================================================

# Memory-mapped file I/O (5.4x faster) - Recommended for low-latency applications
# Default: false
log4rich.performance.memoryMapped=false

# Memory-mapped file size
# Default: 64M
log4rich.performance.mappedSize=64M

# Force synchronization on write
# Default: false
log4rich.performance.forceOnWrite=false

# Force synchronization interval in milliseconds
# Default: 1000
log4rich.performance.forceInterval=1000

# Batch processing (23x faster multi-threaded) - Recommended for high-throughput applications
# Enable batch processing
# Default: false
log4rich.performance.batchEnabled=false

# Number of messages to batch together
# Default: 1000
log4rich.performance.batchSize=1000

# Maximum time to wait before flushing batch (milliseconds)
# Default: 100
log4rich.performance.batchTimeMs=100

# Zero-allocation logging - Recommended for GC-sensitive applications
# Enable zero-allocation mode
# Default: false
log4rich.performance.zeroAllocation=false

# StringBuilder initial capacity for zero-allocation mode
# Default: 1024
log4rich.performance.stringBuilderCapacity=1024

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Thread synchronization timeout in milliseconds
# Default: 5000
log4rich.thread.lockTimeout=5000

# Logger name formatting
# Truncate logger names to max length
# Default: false
log4rich.truncateLoggerNames=false

# Maximum logger name length when truncation is enabled
# Default: 30
log4rich.maxLoggerNameLength=30

# Class name format (SIMPLE, FULL)
# Default: SIMPLE
log4rich.class.format=SIMPLE

# =============================================================================
# LOGGER-SPECIFIC CONFIGURATION
# =============================================================================

# Set specific levels for different packages/classes
# Format: log4rich.logger.{logger.name}={LEVEL}

# Example: Set all database operations to DEBUG
log4rich.logger.com.myapp.dao=DEBUG

# Example: Set security components to WARN (less verbose)
log4rich.logger.com.myapp.security=WARN

# Example: Set performance-critical components to ERROR only
log4rich.logger.com.myapp.performance=ERROR

# Example: Enable detailed logging for specific service
log4rich.logger.com.myapp.service.UserService=TRACE

# Additional examples:
# Set DEBUG level for all classes in com.myapp.service package
#log4rich.logger.com.myapp.service=DEBUG

# Set WARN level for all classes in com.myapp.dao package
#log4rich.logger.com.myapp.dao=WARN

# Set ERROR level for a specific class
#log4rich.logger.com.myapp.service.UserService=ERROR

# Set TRACE level for debugging a specific component
#log4rich.logger.com.myapp.util.DatabaseManager=TRACE

# =============================================================================
# PATTERN FORMAT PLACEHOLDERS
# =============================================================================

# Available placeholders for console.pattern and file.pattern:
# %level      - Log level (INFO, DEBUG, ERROR, etc.)
# %date{fmt}  - Timestamp with optional format (default: yyyy-MM-dd HH:mm:ss)
# %thread     - Thread name
# %class      - Simple class name
# %method     - Method name
# %line       - Line number
# %message    - Log message
# %n          - Line separator (platform-specific)

# Example patterns:
# Simple: %level %message%n
# Detailed: [%level] %date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %class.%method:%line - %message%n
# JSON-like: {"level":"%level","time":"%date{yyyy-MM-dd'T'HH:mm:ss.SSS}","thread":"%thread","class":"%class","method":"%method","line":%line,"message":"%message"}%n

# =============================================================================
# PRODUCTION CONFIGURATION EXAMPLES
# =============================================================================

# High-Performance Production Setup:
# Optimized for maximum throughput with reduced overhead
#log4rich.rootLevel=WARN
#log4rich.location.capture=false
#log4rich.performance.batchEnabled=true
#log4rich.performance.batchSize=2000
#log4rich.file.immediateFlush=false
#log4rich.file.compress.async=true
#log4rich.file.compress.async.threads=4
#log4rich.file.bufferSize=32768

# Low-Latency Production Setup:
# Optimized for minimum logging latency
#log4rich.rootLevel=ERROR
#log4rich.location.capture=false
#log4rich.performance.memoryMapped=true
#log4rich.performance.mappedSize=128M
#log4rich.file.compress.async=true
#log4rich.file.compress.async.queueSize=50

# Development Setup:
# Full features enabled for debugging and development
#log4rich.rootLevel=DEBUG
#log4rich.console.enabled=true
#log4rich.file.enabled=true
#log4rich.location.capture=true
#log4rich.file.compress.async=true

# High-Volume Logging Setup (with compression overload protection):
# Handles very high log volumes with adaptive management
#log4rich.rootLevel=INFO
#log4rich.file.maxSize=50M
#log4rich.file.compress.async=true
#log4rich.file.compress.async.queueSize=200
#log4rich.file.compress.async.threads=4
#log4rich.file.compress.async.timeout=60000

# =============================================================================
# PERFORMANCE TUNING GUIDELINES
# =============================================================================

# For high-performance logging:
# 1. Disable location capture: log4rich.location.capture=false
# 2. Use larger buffer sizes: log4rich.file.bufferSize=32768
# 3. Disable immediate flush: log4rich.file.immediateFlush=false
# 4. Set appropriate log levels: log4rich.rootLevel=WARN
# 5. Use faster compression: log4rich.file.compress.program=gzip with log4rich.file.compress.args=-1
# 6. Enable batch processing: log4rich.performance.batchEnabled=true
# 7. Use memory-mapped files: log4rich.performance.memoryMapped=true
# 8. Enable async compression: log4rich.file.compress.async=true

# Performance Characteristics:
# - Standard Mode: ~200K messages/second
# - Memory-Mapped: ~750K messages/second (5.4x improvement)
# - Batch Mode: ~2.3M messages/second multi-threaded (23x improvement)
# - Async Logging: Sub-microsecond latency with overflow protection

# =============================================================================
# CONFIGURATION VALIDATION
# =============================================================================

# log4Rich will validate configuration on startup and log warnings for:
# - Invalid log levels
# - Inaccessible file paths
# - Invalid pattern formats
# - Conflicting performance settings
# - Missing compression programs
# - Invalid numeric values

# To enable configuration debugging, add:
# -Dlog4rich.debug=true

# To validate configuration without starting logging:
# -Dlog4rich.validateOnly=true